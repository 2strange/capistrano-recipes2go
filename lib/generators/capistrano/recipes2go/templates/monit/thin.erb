# Monit configuration for THIN :  <%= fetch(:application) %>  (<%= fetch(:stage) %>)
<%  fetch(:app_instances, 1).times do |n| %>
  check process <%= monit_process_name('thin', n) %> with pidfile <%= fetch(:monit_thin_pid_path) %>/thin_<%= fetch(:application) %>_<%= fetch(:stage) %>.<%= n %>.pid
    group thin-<%= fetch(:application) %>-<%= fetch(:stage) %>

    START PROGRAM = "/bin/systemctl start <%= monit_process_name('thin', n) %>" WITH TIMEOUT 90 SECONDS
    STOP PROGRAM  = "/bin/systemctl stop <%= monit_process_name('thin', n) %>" WITH TIMEOUT 90 SECONDS
    RESTART PROGRAM = "/bin/systemctl restart <%= monit_process_name('thin', n) %>" WITH TIMEOUT 90 SECONDS

    IF DOES NOT EXIST FOR 3 CYCLES THEN START
    IF DOES NOT EXIST FOR 3 CYCLES THEN <%= monit_alert %>
    IF 3 RESTARTS WITHIN 5 CYCLES THEN <%= monit_alert %>
    IF MEM > <%= ( fetch( :monit_thin_totalmem_mb, 300 ).to_i * 0.75 ).to_i %> MB THEN <%= monit_alert %>
    IF MEM > <%= fetch( :monit_thin_totalmem_mb, 300 ) %> MB FOR 2 CYCLES THEN RESTART
    IF CPU > 50% THEN <%= monit_alert %>
    IF CPU > 50% FOR 3 CYCLES THEN RESTART
    IF 5 RESTARTS WITHIN 5 CYCLES THEN TIMEOUT
    IF CHANGED PID 2 TIMES WITHIN 20 CYCLES THEN <%= monit_alert %>

    # if does not exist for 3 cycles then start # (default)
    # if does not exist for 3 cycles then <%= monit_alert %>
    # if 3 restarts within 5 cycles then <%= monit_alert %>
    # if mem > <%= ( fetch( :monit_thin_totalmem_mb, 300 ).to_i * 0.75 ).to_i %> MB then <%= monit_alert %>
    # if mem > <%= fetch( :monit_thin_totalmem_mb, 300 ) %> MB for 2 cycles then restart
    # if cpu > 50% then <%= monit_alert %>
    # if cpu > 50% for 3 cycles then restart
    # if 5 restarts within 5 cycles then timeout
    # # alert <%= fetch(:monit_mail_to) %> only on { pid }
    # if changed pid 2 times within 20 cycles then <%= monit_alert %>

<% end %>
