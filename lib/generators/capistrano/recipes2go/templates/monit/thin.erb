# Monit configuration for THIN :  <%= fetch(:application) %>  (<%= fetch(:stage) %>)
<%  fetch(:app_instances, 1).times do |n| %>
  check process <%= monit_process_name('thin', n) %> with pidfile <%= fetch(:monit_thin_pid_path) %>/thin_<%= fetch(:application) %>_<%= fetch(:stage) %>.<%= n %>.pid
    group thin-<%= fetch(:application) %>-<%= fetch(:stage) %>

    <% if fetch(:thin_daemon_ruby_vm) == :rvm %>
    start program = "/bin/bash -lc '<%= rvm_command(fetch(:thin_daemon_user)) %> bundle exec thin -C <%= current_path %>/config/thin_app_<%= fetch(:stage) %>.yml start -o <%= n %>'"
    stop program = "/bin/bash -lc '<%= rvm_command(fetch(:thin_daemon_user)) %> bundle exec thin -C <%= current_path %>/config/thin_app_<%= fetch(:stage) %>.yml stop -o <%= n %>'"
    <% else %>
    start program = "/usr/bin/env bundle exec thin -C <%= current_path %>/config/thin_app_<%= fetch(:stage) %>.yml start -o <%= n %>"
    stop program = "/usr/bin/env bundle exec thin -C <%= current_path %>/config/thin_app_<%= fetch(:stage) %>.yml stop -o <%= n %>"
    <% end %>

    if does not exist for 3 cycles then start # (default)
    if does not exist for 3 cycles then <%= monit_alert %>
    if 3 restarts within 5 cycles then <%= monit_alert %>
    if mem > <%= ( fetch( :monit_thin_totalmem_mb, 300 ).to_i * 0.75 ).to_i %> MB then <%= monit_alert %>
    if mem > <%= fetch( :monit_thin_totalmem_mb, 300 ) %> MB for 2 cycles then restart
    if cpu > 50% then <%= monit_alert %>
    if cpu > 50% for 3 cycles then restart
    if 5 restarts within 5 cycles then timeout
    # alert <%= fetch(:monit_mail_to) %> only on { pid }
    if changed pid 2 times within 20 cycles then <%= monit_alert %>
<% end %>
