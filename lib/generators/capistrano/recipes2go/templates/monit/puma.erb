<% workers = fetch(:puma_workers, 1) %>
<% if workers > 1 %>
  <% workers.times do |idx| %>
check process <%= monit_process_name('puma', idx) %> with pidfile <%= fetch(:monit_puma_pid_path) %>/puma_<%= idx %>.pid
  group puma-<%= fetch(:application) %>-<%= fetch(:stage) %>
  group puma
  start program = "/bin/bash -lc '<%= puma_command %> -C <%= shared_path %>/config/puma.rb'"
  stop program  = "/bin/bash -lc '<%= puma_command %> -C <%= shared_path %>/config/puma.rb stop'"
  if totalmem > <%= ( fetch( :monit_puma_totalmem_mb, 300 ).to_i * 0.75 ).to_i %> MB then <%= monit_alert %>
  if totalmem > <%= fetch( :monit_puma_totalmem_mb, 300 ) %> MB for 3 cycles then restart
  <% end %>
<% else %>
check process <%= monit_process_name('puma') %> with pidfile <%= fetch(:puma_pid_path) %>/puma.pid
  group puma-<%= fetch(:application) %>-<%= fetch(:stage) %>
  group puma
  start program = "/bin/bash -lc '<%= puma_command %> -C <%= shared_path %>/config/puma.rb'"
  stop program  = "/bin/bash -lc '<%= puma_command %> -C <%= shared_path %>/config/puma.rb stop'"
  if totalmem > <%= ( fetch( :monit_puma_totalmem_mb, 300 ).to_i * 0.75 ).to_i %> MB then <%= monit_alert %>
  if totalmem > <%= fetch( :monit_puma_totalmem_mb, 300 ) %> MB for 3 cycles then restart
<% end %>
