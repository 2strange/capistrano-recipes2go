###
### HTTP-Config generated with capistrano-recipes2go at: <%= Time.now.strftime("%Y-%m-%d .. %H:%M .. %Z") %>
###

<% if fetch(:rails_app_server) == :thin %>
upstream app_<%= fetch(:application) %>_<%= fetch(:stage) %>_cluster {
  <% fetch(:thin_servers).to_i.times do |i| %>
  server unix:/tmp/thin.<%= fetch(:application) %>.<%= fetch(:stage) %>.<%= i %>.sock 
         max_fails=1 
         fail_timeout=15s;
  <% end %>
}
<% else %>
upstream app_<%= fetch(:application) %>_<%= fetch(:stage) %>_cluster {
  <% if fetch(:puma_workers).to_i > 1 %>
    <% fetch(:puma_workers).to_i.times do |i| %>
    server unix:<%= shared_path %>/tmp/sockets/puma.<%= i %>.sock
           max_fails=1
           fail_timeout=15s;
    <% end %>
  <% else %>
    # Single-mode Puma (workers <= 1), use only one socket
    server unix:<%= shared_path %>/tmp/sockets/puma.sock
           max_fails=1
           fail_timeout=15s;
  <% end %>
}
<% end %>




<%= render2go("nginx/rails_cache_path") %>
<%= render2go("nginx/media_cache_path") %>


<% if fetch(:nginx_use_ssl, false) && !fetch(:nginx_also_allow_http, false) %>
# Redirect HTTP to HTTPS
server {
  listen 80;
  listen [::]:80;

  server_name <%= nginx_all_domains_with_www.join(joiner) %>;
  <% if fetch(:nginx_major_domain) %>
  return 301 https://<%= nginx_major_domain %>$request_uri;
  <% else %>
  return 301 https://$host$request_uri;
  <% end %>
}
<% end %>


<% if fetch(:nginx_major_domain) %>
<% if fetch(:nginx_use_ssl) %>

<% if fetch(:nginx_also_allow_http, false) %>
# Redirect HTTP to HTTPS
server {
  listen 80;
  listen [::]:80;

  server_name <%= nginx_all_domains_with_www.join(joiner) %>;
  
  return 301 https://<%= nginx_major_domain %>$request_uri;
}
<% end %>
# Redirect old domains to major (HTTPS)
server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  ssl_certificate       <%= fetch(:nginx_other_ssl_cert) %>;
  ssl_certificate_key   <%= fetch(:nginx_other_ssl_key) %>;

  <%= render2go("nginx/https_ssl_options") %>

  server_name           <%= nginx_domains.join(joiner) %>;
  return 301 https://<%= nginx_major_domain %>$request_uri;
}
<% else %>
# Redirect old domains to major (HTTP)
server {
  listen 80;
  listen [::]:80;

  server_name           <%= nginx_domains.join(joiner) %>;
  return 301 http://<%= nginx_major_domain %>$request_uri;
}
<% end %>
<% end %>



<% if fetch(:nginx_also_allow_http, false) && fetch(:nginx_use_ssl, false) %>
# Main HTTP Server Block
server {
  listen 80;
  listen [::]:80;

  <% if fetch(:nginx_remove_www) %>
  ## Remove "www" from URLs
  if ($host ~* ^www\.(?<domain>.*)) {  return 301 <%= fetch(:nginx_use_ssl) ? "https" : "http" %>://$domain$request_uri;  }
  <% end %>

  <% if fetch(:nginx_major_domain) %>
  server_name <%= fetch(:nginx_major_domain).gsub(/^\*?\./, "") %>;
  <% else %>
  server_name <%= nginx_domains_with_www.join(joiner) %>;
  <% end %>

  <%= render2go("nginx/rails_options") %>

  <%= render2go("nginx/media_cache_server") %>

  try_files $uri/index.html $uri @app_<%= fetch(:application) %>_<%= fetch(:stage) %>;

  location @app_<%= fetch(:application) %>_<%= fetch(:stage) %> {
    proxy_set_header X-Real-IP          $remote_addr;
    proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto  $scheme;
    proxy_set_header Host               $host:$server_port;
    proxy_redirect    off;
    <%= render2go("nginx/rails_cache_server") %>
    proxy_pass        http://app_<%= fetch(:application) %>_<%= fetch(:stage) %>_cluster;
  }
}
<% end %>



<% if fetch(:nginx_use_ssl) %>
# Main SSL Server Block
server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  ssl_certificate     <%= fetch(:nginx_ssl_cert) %>;
  ssl_certificate_key <%= fetch(:nginx_ssl_key) %>;

  <%= render2go("nginx/https_ssl_options") %>
<% else %>
# Main HTTP Server Block
server {
  listen 80;
  listen [::]:80;
<% end %>

  <% if fetch(:nginx_remove_www) %>
  ## Remove "www" from URLs
  if ($host ~* ^www\.(?<domain>.*)) {
    return 301 <%= fetch(:nginx_use_ssl) ? "https" : "http" %>://$domain$request_uri;
  }
  <% end %>

  <% if fetch(:nginx_major_domain) %>
  server_name <%= fetch(:nginx_major_domain).gsub(/^\*?\./, "") %>;
  <% else %>
  server_name <%= nginx_domains_with_www.join(joiner) %>;
  <% end %>

  <%= render2go("nginx/rails_options") %>

  <%= render2go("nginx/media_cache_server") %>

  try_files $uri/index.html $uri @app_<%= fetch(:application) %>_<%= fetch(:stage) %>;

  location @app_<%= fetch(:application) %>_<%= fetch(:stage) %> {
    proxy_set_header X-Real-IP          $remote_addr;
    proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto  $scheme;
    proxy_set_header Host               $host:$server_port;
    proxy_redirect    off;
    <%= render2go("nginx/rails_cache_server") %>
    proxy_pass        http://app_<%= fetch(:application) %>_<%= fetch(:stage) %>_cluster;
  }
}
