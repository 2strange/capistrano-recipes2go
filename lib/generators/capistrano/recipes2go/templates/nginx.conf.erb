###
### HTTP-Config generated with magic_recipes_two at: <%= Time.now.strftime("%Y-%m-%d .. %H:%M .. %Z") %>
###

<% if fetch(:rails_application_server) == :thin %>
upstream app_<%= fetch(:application) %>_<%= fetch(:stage) %>_cluster {
  <% fetch(:app_instances).to_i.times do |i| %>
  server unix:/tmp/thin.<%= fetch(:application) %>.<%= fetch(:stage) %>.<%= i %>.sock 
         max_fails=1 
         fail_timeout=15s;
  <% end %>
}
<% else %>
upstream app_<%= fetch(:application) %>_<%= fetch(:stage) %>_cluster {
  <% if fetch(:app_instances).to_i > 1 %>
    <% fetch(:app_instances).to_i.times do |i| %>
    server unix:<%= shared_path %>/tmp/sockets/puma.<%= i %>.sock
           max_fails=1
           fail_timeout=15s;
    <% end %>
  <% else %>
    # Single-mode Puma (workers <= 1), use only one socket
    server unix:<%= shared_path %>/tmp/sockets/puma.sock
           max_fails=1
           fail_timeout=15s;
  <% end %>
}
<% end %>


<%= render2go("nginx/rails_cache_path") %>
<%= render2go("nginx/media_cache_path") %>

# Redirect HTTP to HTTPS
<% if fetch(:nginx_use_ssl) %>
server {
  listen 80;
  server_name <%= nginx_all_domains_with_www.join(joiner) %>;
  return 301 https://$host$request_uri;
}

<% if fetch(:nginx_redirect_subdomains, false) %>
server {
  listen 80;
  server_name <%= nginx_domains.map{ |d| subdomain_regex(d) }.join(joiner) %>;
  return 301 https://$sub.$host$request_uri;
}
<% end %>
<% end %>

# Main SSL Server Block
server {
<% if fetch(:nginx_use_ssl) %>
  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  ssl_certificate     <%= fetch(:nginx_ssl_cert) %>;
  ssl_certificate_key <%= fetch(:nginx_ssl_key) %>;

  ## Modern TLS Security
  ssl_protocols       TLSv1.2 TLSv1.3;
  ssl_ciphers         <%= fetch(:nginx_ssl_ciphers) %>;
  ssl_prefer_server_ciphers on;
  ssl_ecdh_curve      X25519:secp384r1;

  ssl_session_cache   shared:SSL:50m;
  ssl_session_tickets off;

  ## OCSP Stapling for Faster SSL Handshakes
  ssl_stapling        on;
  ssl_stapling_verify on;
  resolver            8.8.8.8 8.8.4.4 valid=300s;
  resolver_timeout    5s;

  ## Security Headers
  add_header X-Frame-Options DENY;
  add_header X-Content-Type-Options nosniff;
  add_header Referrer-Policy "strict-origin-when-cross-origin";

  ## Enable HTTP Strict Transport Security (HSTS)
  <% if fetch(:nginx_strict_security) %>
  add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
  <% end %>

  ## Remove "www" from URLs
  <%= render2go("nginx/remove_www") %>

<% else %>
  listen 80;
  listen [::]:80;
<% end %>

  <% if fetch(:nginx_major_domain) %>
  server_name <%= fetch(:nginx_domain_wildcard, false) ? "." : "" %><%= fetch(:nginx_major_domain).gsub(/^\*?\./, "") %>;
  <% else %>
  server_name <%= nginx_domains_with_www.join(joiner) %>;
  <% end %>

  root <%= current_path %>/public;

  access_log <%= fetch(:nginx_log_path) %>/nginx-access.log;
  error_log  <%= fetch(:nginx_log_path) %>/nginx-error.log;

  error_page 404 /404.html;
  location /404.html { root <%= fetch(:deploy_to) %>/current/<%= fetch(:nginx_static_dir) %>; }

  error_page 500 502 503 504 /500.html;
  location /500.html { root <%= fetch(:deploy_to) %>/current/<%= fetch(:nginx_static_dir) %>; }

  client_max_body_size  4G;
  keepalive_timeout     10;

  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

<% if fetch(:allow_well_known) %>
  location ~ /.well-known { allow all; }
<% end %>

  <%= render2go("nginx/media_cache_server") %>

  try_files $uri/index.html $uri @app_<%= fetch(:application) %>_<%= fetch(:stage) %>;

  location @app_<%= fetch(:application) %>_<%= fetch(:stage) %> {
    proxy_set_header X-Real-IP          $remote_addr;
    proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto  $scheme;
    proxy_set_header Host               $host:$server_port;
    proxy_redirect    off;
    <%= render2go("nginx/rails_cache_server") %>
    proxy_pass        http://app_<%= fetch(:application) %>_<%= fetch(:stage) %>_cluster;
  }
}
